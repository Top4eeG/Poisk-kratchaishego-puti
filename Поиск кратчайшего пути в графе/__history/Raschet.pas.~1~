unit Raschet;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, StdCtrls, ExtCtrls, Vcl.Imaging.jpeg;

type
  TForm5 = class(TForm)
    Label1: TLabel;
    Button1: TButton;
    StringGrid1: TStringGrid;
    Edit1: TLabeledEdit;
    Edit2: TLabeledEdit;
    SB1: TScrollBar;
    Label2: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure SB1Change(Sender: TObject);
    procedure StringGrid1KeyPress(Sender: TObject; var Key: Char);
   
  private
    { Private declarations }
  public
    { Public declarations }
  end;

const
  Sres = 'Итог : ';
  SVerts = 'Вершины графа: ';
  N = 15; { кол-во вершин графа}

var
  Form5: TForm5;

implementation

{$R *.dfm}
procedure TForm5.Button1Click(Sender: TObject);

var
  map: array[1..N, 1..N] of integer;
  // Карта.map[i,j] не 0,если
  // точки i и j соединены

  road: array[1..N] of integer;
  // Дорога — номера точек карты

  incl: array[1..N] of boolean; // incl[1]равен TRUE,если точка
  // с номером i включена в road

  start, finish: integer;
  // Начальная и конечная точки

  found: boolean; len: integer; // длина найденного (минимального) маршрута
  c_len: integer; // длина текущего (формируемого) маршрута
  i, j: integer;
  str: string;

  // выбор очередной точки
  procedure step(s, f, p: integer);
  var
    c: integer; { Номер точки, в которую делаем очередной шаг }
    i: integer;
  begin
    if s = f then
    begin
      len := c_len; { сохраним длину найденного маршрута }
      { вывод найденного маршрута }
      for i := 1 to p - 1 do
        str := str + ' ' + IntToStr(road[i]);
        str := str + ', длина:' + IntToStr(len) + #13;
    end
    else
      { выбираем очередную точку }
      for c := 1 to N do { проверяем все вершины }
        if (map[s, c] <> 0) and (not incl[c])
          and ((len = 0) or (c_len + map[s, c] < len)) then
        begin
          // точка соединена с текущей, но не включена в маршрут
          road[p] := c; { добавим вершину в путь }
          incl[c] := TRUE; { пометим вершину как включенную }
          c_len := c_len + map[s, c];
          step(c, f, p + 1);
          incl[c]:= FALSE;
          road[p]:=0;
          c_len := c_len - map[s, c];
        end;
  end;
  { конец процедуры step }

begin
  if (Edit1.Text = '') or (Edit2.Text = '') then
    Exit;
  Label1.caption := '';
  str := '';
  { инициализация массивов }
  for i:= 1 to N do
    road[i]:= 0;

  for i := 1 to N do
    incl[i] := FALSE;

  { ввод описания карты из SrtingGrid.Cells}
  for i := 1 to N do
    for j := 1 to N do
      if StringGrid1.Cells[i, j] <> '' then
        map[i, j] := StrToInt(StringGrid1.Cells[i, j])
      else
        map[i, j] := 0;

  len := 0; // длина найденного (минимального) маршрута
  c_len := 0; // длина текущего (формируемого) маршрута

  start := StrToInt(Edit1.text);
  finish := StrToInt(Edit2.text);

  road[1] := start; { внесем точку в маршрут }
  incl[start] := TRUE; { пометим ее как включенную }
  step(start, finish, 2); {ищем вторую точку маршрута }

  // проверим, найден ли хотя бы один путь
  if c_len <> 0 then
    Label1.caption := 'Указанные точки не соединены!'
  else
    Label1.caption := Sres + str;
end;
procedure TForm5.FormCreate(Sender: TObject);
begin
  label1.Caption := Sres;
  sb1.Position := 4;
end;
procedure TForm5.SB1Change(Sender: TObject);
var
p, i: Integer;
begin
  p := SB1.Position;
  label2.Caption := SVerts + IntToStr(p);
  StringGrid1.ColCount := p + 1;
  StringGrid1.RowCount := p + 1;
  for I := 1 to StringGrid1.ColCount - 1 do
    StringGrid1.Cells[i, 0] := IntToStr(i);
  for i := 1 To StringGrid1.RowCount - 1 do
    StringGrid1.Cells[0, i] := IntToStr(i);
end;

procedure TForm5.StringGrid1KeyPress(Sender: TObject; var Key: Char);
begin
case Key of
    '0', '1', #8:
      ; // цифры разделитель и <Backspace>
  else
    Key := Chr(0); // символ не отображать
  end;
end;

end.
